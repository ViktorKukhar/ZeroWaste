- if Flipper[:old_calculator_design].enabled?
  .jumbotron
    .container-fluid
      = link_to root_path, class: "rounded float-right calculator__cross__space" do
        = image_tag "close.svg", width: 40, class: "z-1 position-relative"
      p.form-p
        = t '.form_description'
      .form
        = form_with url: "#", id: "form", method: :get, data: { locale: I18n.locale } do |form|
          .flex-item
            = select_tag 'childs_years', options_for_select([t('.form.childs_years_label'),
              *(0..2).map{ |year| ["#{year} #{t('datetime.prompts.year').downcase.pluralize(count: year, locale: I18n.locale)}", year] }]),
              { class: 'custom-select', required: true }
            = select_tag 'childs_months', options_for_select([t('.form.childs_months_label'),
              *(0..11).map{ |month| ["#{month} #{t('datetime.prompts.month').downcase.pluralize(count: month, locale: I18n.locale)}", month] }]),
              { class: 'custom-select' }
            = select_tag 'two_years_childs_months', options_for_select([t('.form.childs_months_label'),
              *(0..6).map{ |month| ["#{month} #{t('datetime.prompts.month').downcase.pluralize(count: month, locale: I18n.locale)}", month] }]),
              { class: 'custom-select' }

            - if FeatureFlag.get('feature_budget_category').active?
              p.form-a
                = t '.form_price'
                = select_tag 'product_category',
                  options_for_select([[t('calculators.calculator.form.budgetary'), nil],
                    [t('calculators.calculator.form.medium'), 'medium'],
                    [t('calculators.calculator.form.premium'), 'premium']],
                  { selected: 'medium' }), { class: 'custom-select', required: true }
            = form.text_field :baby_weight, placeholder:t('.form.baby_weight_label'), class:"form-input d-none"
            = form.text_field :diapers_per_day, placeholder: "Diapers per day", class:"form-input d-none"
          = button_to t('.calculate_result_button'), { class: "calculate-btn result-btn", id: "button_submit" }
  .container.calculation-results
    .row.row-l
      .col-sm.result-card
        .img-border
          = image_tag "diapers_bought.png", class:"rounded"
        span
          p data-type="used_diapers_amount" 0
          - if I18n.locale == :en
            | diapers already used
          - elsif I18n.locale == :uk
              #localized_uk_used_diapers_amount
                | підгузків ви вже використали
      .col-sm.result-card
        .img-border
          = image_tag "diapers_to_buy.png", class:"rounded"
        span
          p data-type="to_be_used_diapers_amount" 0
          - if I18n.locale == :en
            | diapers to be used in the future
          - elsif I18n.locale == :uk
              #localized_uk_to_be_used_diapers_amount
                | підгузків ви ще використаєте
      .w-100.row_break
      .col-sm.result-card
        .img-border
          = image_tag "money_spent.png", class:"rounded"
        span
          p data-type="money_spent" 0
          = t '.money_spent'
      .col-sm.result-card
        .img-border
          = image_tag "money_to_spent.png", class:"rounded"
        span
          p data-type="money_will_be_spent" 0
          = t '.money_will_be_spent'
  .container.calculation-results
    .row
      .col-xl-8.result-card
        = render 'layouts/description_block'
      .col-sm.result-card
        button.calculate-btn.result-btn.description-btn
          = render 'layouts/description_button'
- else
  .jumbotron.jumbotron-fluid.position-relative.rounded
    = link_to root_path, class: "rounded calculator__cross__space" do
      = image_tag "close.svg", width: 40, class: "z-1"
    .d-flex.justify-content-around.flex-wrap.calculator_wrap
      = simple_form_for(:child, url: "#", html: { class: "simple_form_calculator",
                                                data:{ controller: "input-child-info",
                                                        input_child_info_url_value: api_v1_diaper_calculators_url,
                                                        input_child_info_results_outlet: '.result' }}) do |form|
        .flex-item.flex-column
          .input_lable
            = t('.form_description')
          .flex-item.flex-row.rounded.w-100.age_wrapper.form_fild
            = form.input_field :years,
                                collection: 0..2,
                                prompt:'__',
                                class:'select-age ml-2 rounded',
                                data: { input_child_info_target: 'year', action:'input-child-info#yearChanged' }

            = t('.form.childs_years_label')

            = form.input_field :months,
                                collection: 0..11,
                                prompt:'__',
                                class:'select-age rounded',
                                data: { input_child_info_target: 'month' }

            = t('.form.childs_months_label')
          .input_lable
            = t('.form_price')
          = form.input_field :product_category, collection: collection_product_category,
                                                        selected: t('.form.medium'),
                                                        label: t('.form_price'),
                                                        class: 'form_fild price_select rounded w-100',
                                                        data: { input_child_info_target: 'productCategory' }

          = form.submit t('.calculate_result_button'),
                      class:'calculate-btn result-btn',
                      data: { action:'input-child-info#submit' }
      = image_tag "scales.png", class:"scales_img"
  .container.calculation-results.result [data-controller='results']
    .row.row-l
      .col-sm.result-card
        .img-border
          = image_tag "diapers_to_buy.png", class:"rounded"
        span
          p [data-results-target="diapersToBeUsed"] 0
          .[data-results-target="ToBeUsedDiapersAmount"]
            ="#{t(".diaper").pluralize(count: 0, locale: I18n.locale)} #{t('.will_buy_diapers')}"
      .w-100.row_break
      .col-sm.result-card
        .img-border
          = image_tag "diapers_bought.png", class:"rounded"
        span
          p [data-results-target="diapersUsed"] 0
          .[data-results-target="UsedDiapersAmount"]
            = "#{t(".diaper").pluralize(count: 0, locale: I18n.locale)} #{t('.bought_diapers')}"
      .col-sm.result-card
        .img-border
          = image_tag "money_to_spent.png", class:"rounded"
        span
          p [data-results-target="moneyWillBeSpent"] 0
          = t '.money_will_be_spent'
      .col-sm.result-card
        .img-border
          = image_tag "money_spent.png", class:"rounded"
        span
          p [data-results-target="moneySpent"] 0
          = t '.money_spent'

  .container.calculation-results
    .row
      .col-xl-8.result-card
        = render 'layouts/description_block'
      .col-sm.result-card
        = button_to "Calculate", { class: "calculate-btn description-btn" }
          = render 'layouts/description_button'
